<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>DNN Simple Tweet Settings</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h2&gt;Simple Twitter Module &lt;/h2&gt;&lt;p&gt;This module uses the &lt;a href="http://twitter.com/about/resources/widgets/widget_profile" target="_blank"&gt;Twiter Profile Widget&lt;/a&gt; to create a custom twitter look and layout module.&lt;/p&gt;&lt;p&gt;This makes it easy to add Twitter Feeds wihtin DotNetNuke.&lt;/p&gt;</value>
  </data>
  <data name="rk.TweetText.Help" xml:space="preserve">
    <value>Select a text color of the Tweet text.</value>
  </data>
  <data name="rk.TweetText.Text" xml:space="preserve">
    <value>Tweet Text Color</value>
  </data>
  <data name="rkAvatars.Help" xml:space="preserve">
    <value>When checked, will display the users avatars next to their tweet messages.</value>
  </data>
  <data name="rkAvatars.Text" xml:space="preserve">
    <value>Show Avatars</value>
  </data>
  <data name="rkBehavior.Help" xml:space="preserve">
    <value>If Timed Interval is selected, then the values for Loop Results and Tweet Interval is taken into account to display the Tweet.  If Load all tweets is selected, then all tweets are displayed depending on the Number of tweets chosen (see below).</value>
  </data>
  <data name="rkBehavior.Text" xml:space="preserve">
    <value>Select Tweet Module Behaviour</value>
  </data>
  <data name="rkBehaviourFalse.Text" xml:space="preserve">
    <value>Load all tweets</value>
  </data>
  <data name="rkBehaviourTrue.Text" xml:space="preserve">
    <value>Timed Interval</value>
  </data>
  <data name="rkDebug.Help" xml:space="preserve">
    <value>Turns on debugging information so you can see what the module is using to display information.</value>
  </data>
  <data name="rkDebug.Text" xml:space="preserve">
    <value>Turn on debugging messages</value>
  </data>
  <data name="rkDivPadding.Help" xml:space="preserve">
    <value>Enter values which you'd like to have padding around the tweet information area.</value>
  </data>
  <data name="rkDivPadding.Text" xml:space="preserve">
    <value>Padding</value>
  </data>
  <data name="rkFontSize.Help" xml:space="preserve">
    <value>Enter the font-size you wish the tweets to be displayed in.  E.g. Enter 14 for 14px.</value>
  </data>
  <data name="rkFontSize.Text" xml:space="preserve">
    <value>Tweet Font Size</value>
  </data>
  <data name="rkHashTags.Help" xml:space="preserve">
    <value>When checked, will display the hashtags within the tweet messages.</value>
  </data>
  <data name="rkHashTags.Text" xml:space="preserve">
    <value>Show Hashtags</value>
  </data>
  <data name="rkIncludeScrollBar.Help" xml:space="preserve">
    <value>If checked, the system will display a side scrollbar for the listing of tweets.</value>
  </data>
  <data name="rkIncludeScrollBar.Text" xml:space="preserve">
    <value>Include Scroll Bar</value>
  </data>
  <data name="rkLinkColor.Help" xml:space="preserve">
    <value>Select a text color for Tweet links.</value>
  </data>
  <data name="rkLinkColor.Text" xml:space="preserve">
    <value>Link Color</value>
  </data>
  <data name="rkLoopResults.Help" xml:space="preserve">
    <value>Tweets are rotated and displayed again as they reach the end.</value>
  </data>
  <data name="rkLoopResults.Text" xml:space="preserve">
    <value>Loop the Tweet Results</value>
  </data>
  <data name="rkNumberOfTweets.Help" xml:space="preserve">
    <value>Enter the number of tweets you which the system to display.</value>
  </data>
  <data name="rkNumberOfTweets.Text" xml:space="preserve">
    <value>Display number of Tweets</value>
  </data>
  <data name="rkPollForNew.Help" xml:space="preserve">
    <value>If checked, the system will poll for new tweets.</value>
  </data>
  <data name="rkPollForNew.Text" xml:space="preserve">
    <value>Poll for new tweets</value>
  </data>
  <data name="rkShellBackground.Help" xml:space="preserve">
    <value>Select a background color of the shell area.</value>
  </data>
  <data name="rkShellBackground.Text" xml:space="preserve">
    <value>Shell Background Color</value>
  </data>
  <data name="rkShellText.Help" xml:space="preserve">
    <value>Select a text color of the shell area.</value>
  </data>
  <data name="rkShellText.Text" xml:space="preserve">
    <value>Shell Text Color</value>
  </data>
  <data name="rkTimeStamp.Help" xml:space="preserve">
    <value>When checked, will display the timestamps for the tweet messages.</value>
  </data>
  <data name="rkTimeStamp.Text" xml:space="preserve">
    <value>Show Timestamps</value>
  </data>
  <data name="rkTweetBackground.Help" xml:space="preserve">
    <value>Select a background color of the Tweet area.</value>
  </data>
  <data name="rkTweetBackground.Text" xml:space="preserve">
    <value>Tweet Background Color</value>
  </data>
  <data name="rkTweetHeight.Help" xml:space="preserve">
    <value>Height of the Tweet text area.  A value must be entered.</value>
  </data>
  <data name="rkTweetHeight.Text" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="rkTweetInterval.Help" xml:space="preserve">
    <value>Amount of time between displaying of tweets.  A number greater than 30 is required.</value>
  </data>
  <data name="rkTweetInterval.Text" xml:space="preserve">
    <value>Tweet Interval</value>
  </data>
  <data name="rkTweetText.Help" xml:space="preserve">
    <value>Select a color for the Tweet text.</value>
  </data>
  <data name="rkTweetText.Text" xml:space="preserve">
    <value>Tweet Text Color</value>
  </data>
  <data name="rkTweetWidth.Help" xml:space="preserve">
    <value>Width of the Tweet text area.  If left blank or a zero ('0') is entered, then the width will be set to 'Auto'.</value>
  </data>
  <data name="rkTweetWidth.Text" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="rkTwitterName.Help" xml:space="preserve">
    <value>Enter the name of the twitter account you wish to display.</value>
  </data>
  <data name="rkTwitterName.Text" xml:space="preserve">
    <value>Twitter Name</value>
  </data>
  <data name="valDivPaddingBottom.Error" xml:space="preserve">
    <value>Bottom padding must be an integer.</value>
  </data>
  <data name="valDivPaddingLeft.Error" xml:space="preserve">
    <value>Left padding must be an integer.</value>
  </data>
  <data name="valDivPaddingRight.Error" xml:space="preserve">
    <value>Right padding must be an integer.</value>
  </data>
  <data name="valDivPaddingTop.Error" xml:space="preserve">
    <value>Top padding must be an integer.</value>
  </data>
  <data name="valFontSize.Error" xml:space="preserve">
    <value>Font-size must be an integer.</value>
  </data>
  <data name="valNumberofTweets.Error" xml:space="preserve">
    <value>Number of Tweets must be an integer.</value>
  </data>
  <data name="valShellBackground.Error" xml:space="preserve">
    <value>Please enter the color in proper HTML notation.</value>
  </data>
  <data name="valTweetHeight.Error" xml:space="preserve">
    <value>Height must be an integer.</value>
  </data>
  <data name="valTweetInterval.Error" xml:space="preserve">
    <value>A number greater than 20 is required.</value>
  </data>
</root>